#!/usr/bin/env python3
#############################################################################
# Filename    : LEDMatrix.py
# Description : Control LEDMatrix with 74HC595
# auther      : www.freenove.com
# modification: 2021/11/22
########################################################################from gpiozero import DigitalOutputDevice
import time
from gpiozero import DigitalOutputDevice

LSBFIRST = 1
MSBFIRST = 2
dataPin   = DigitalOutputDevice(17)
latchPin  = DigitalOutputDevice(27)
clockPin = DigitalOutputDevice(22)
pic = [0x1c,0x22,0x51,0x45,0x45,0x51,0x22,0x1c]
data = [
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, # " "
    0x00, 0x00, 0x3E, 0x41, 0x41, 0x3E, 0x00, 0x00, # "0"
    0x00, 0x00, 0x21, 0x7F, 0x01, 0x00, 0x00, 0x00, # "1"
    0x00, 0x00, 0x23, 0x45, 0x49, 0x31, 0x00, 0x00, # "2"
    0x00, 0x00, 0x22, 0x49, 0x49, 0x36, 0x00, 0x00, # "3"
    0x00, 0x00, 0x0E, 0x32, 0x7F, 0x02, 0x00, 0x00, # "4"
    0x00, 0x00, 0x79, 0x49, 0x49, 0x46, 0x00, 0x00, # "5"
    0x00, 0x00, 0x3E, 0x49, 0x49, 0x26, 0x00, 0x00, # "6"
    0x00, 0x00, 0x60, 0x47, 0x48, 0x70, 0x00, 0x00, # "7"
    0x00, 0x00, 0x36, 0x49, 0x49, 0x36, 0x00, 0x00, # "8"
    0x00, 0x00, 0x32, 0x49, 0x49, 0x3E, 0x00, 0x00, # "9"   
    0x00, 0x00, 0x3F, 0x44, 0x44, 0x3F, 0x00, 0x00, # "A"
    0x00, 0x00, 0x7F, 0x49, 0x49, 0x36, 0x00, 0x00, # "B"
    0x00, 0x00, 0x3E, 0x41, 0x41, 0x22, 0x00, 0x00, # "C"
    0x00, 0x00, 0x7F, 0x41, 0x41, 0x3E, 0x00, 0x00, # "D"
    0x00, 0x00, 0x7F, 0x49, 0x49, 0x41, 0x00, 0x00, # "E"
    0x00, 0x00, 0x7F, 0x48, 0x48, 0x40, 0x00, 0x00, # "F"
    0x00, 0x00, 0x3F, 0x40, 0x40, 0x3F, 0x00, 0x00, # "G"
    0x00, 0x00, 0x7F, 0x08, 0x08, 0x7F, 0x00, 0x00, # "H"
    0x00, 0x00, 0x41, 0x7F, 0x41, 0x00, 0x00, 0x00, # "I"
    0x00, 0x00, 0x20, 0x40, 0x40, 0x3F, 0x00, 0x00, # "J"
    0x00, 0x00, 0x7F, 0x08, 0x14, 0x63, 0x00, 0x00, # "K"
    0x00, 0x00, 0x7F, 0x40, 0x40, 0x40, 0x00, 0x00, # "L"
    0x00, 0x00, 0x7F, 0x01, 0x01, 0x07, 0x00, 0x00, # "M"
    0x00, 0x00, 0x7F, 0x02, 0x04, 0x7F, 0x00, 0x00, # "N"
    0x00, 0x00, 0x3E, 0x41, 0x41, 0x3E, 0x00, 0x00, # "O"
    0x00, 0x00, 0x7F, 0x48, 0x48, 0x30, 0x00, 0x00, # "P"
    0x00, 0x00, 0x3E, 0x41, 0x45, 0x3E, 0x00, 0x00, # "Q"
    0x00, 0x00, 0x7F, 0x48, 0x4C, 0x33, 0x00, 0x00, # "R"
    0x00, 0x00, 0x32, 0x49, 0x49, 0x26, 0x00, 0x00, # "S"
    0x00, 0x40, 0x40, 0x7F, 0x40, 0x40, 0x00, 0x00, # "T"
    0x00, 0x00, 0x7E, 0x01, 0x01, 0x7E, 0x00, 0x00, # "U"
    0x00, 0x00, 0x7C, 0x02, 0x01, 0x7C, 0x00, 0x00, # "V"
    0x00, 0x00, 0x7F, 0x02, 0x0C, 0x02, 0x7F, 0x00, # "W"
    0x00, 0x00, 0x63, 0x14, 0x08, 0x63, 0x00, 0x00, # "X"
    0x00, 0x00, 0x70, 0x0F, 0x0F, 0x70, 0x00, 0x00, # "Y"
    0x00, 0x00, 0x43, 0x45, 0x49, 0x61, 0x00, 0x00, # "Z"
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, # " "
]
    
def shiftOut(dPin,cPin,order,val):
    for i in range(0,8):
        cPin.off()
        if(order == LSBFIRST):
            dPin.value = (0x01 & (val>>i) == 0x01)
        elif(order == MSBFIRST):
            dPin.value = (0x80 & (val<<i) == 0x80)
        cPin.on()


def display_message(message):
    for char_index in range(len(data) - 8, -1, -1):
        if 0 <= char_index < len(data) - 8:
            for j in range(0, 20):
                x = 0x80
                for i in range(char_index, char_index + 8):
                    latchPin.off()
                    shiftOut(dataPin, clockPin, MSBFIRST, data[i])
                    shiftOut(dataPin, clockPin, MSBFIRST, ~x)
                    latchPin.on()
                    time.sleep(0.001)
                    x >>= 1
                
def loop():
    while True:
        for j in range(0,500):
            x=0x80
            for i in range(0,8):
                latchPin.off()
                shiftOut(dataPin,clockPin,MSBFIRST,pic[i])

                shiftOut(dataPin,clockPin,MSBFIRST,~x)
                time.sleep(0.001)
                x>>=1
        for k in range(0,len(data)-8):  
            for j in range(0,20):
                x=0x80 
                for i in range(k,k+8):
                    latchPin.off()
                    shiftOut(dataPin,clockPin,MSBFIRST,data[i])
                    shiftOut(dataPin,clockPin,MSBFIRST,~x)
                    latchPin.on()
                    time.sleep(0.001)
                    x>>=1
picTest = [0x01,0x02,0x04,0x08,0x10,0x20,0x40,0x80]
def testLED():
    x=0x80
    for i in range(0,64):
        latchPin.off()
        shiftOut(dataPin,clockPin,MSBFIRST,picTest[i%8])
        shiftOut(dataPin,clockPin,MSBFIRST,~x)
        latchPin.on()
        time.sleep(0.1)
        if i in [7,15,23,31,39,47,55]:
            x>>=1   

if __name__ == '__main__': 
    print ('Program is starting...' )
    try:
        testLED()
        loop()  
    except KeyboardInterrupt:
        destroy()  